// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

#nullable disable

namespace Appets.DataAccess.Entities
{
    public partial class AppDbContext : DbContext
    {
        public AppDbContext()
        {
        }

        public AppDbContext(DbContextOptions<AppDbContext> options)
            : base(options)
        {
        }

        public virtual DbSet<tbAlbergue> tbAlbergue { get; set; }
        public virtual DbSet<tbComponentes> tbComponentes { get; set; }
        public virtual DbSet<tbDonantes> tbDonantes { get; set; }
        public virtual DbSet<tbEmpleados> tbEmpleados { get; set; }
        public virtual DbSet<tbEspecies> tbEspecies { get; set; }
        public virtual DbSet<tbFichaAdopcion> tbFichaAdopcion { get; set; }
        public virtual DbSet<tbFichaMedica> tbFichaMedica { get; set; }
        public virtual DbSet<tbMascotas> tbMascotas { get; set; }
        public virtual DbSet<tbModuloPantallas> tbModuloPantallas { get; set; }
        public virtual DbSet<tbModulos> tbModulos { get; set; }
        public virtual DbSet<tbOcupaciones> tbOcupaciones { get; set; }
        public virtual DbSet<tbPersonas> tbPersonas { get; set; }
        public virtual DbSet<tbProcedencia> tbProcedencia { get; set; }
        public virtual DbSet<tbRazas> tbRazas { get; set; }
        public virtual DbSet<tbRolModuloPantallas> tbRolModuloPantallas { get; set; }
        public virtual DbSet<tbRoles> tbRoles { get; set; }
        public virtual DbSet<tbSolicitud> tbSolicitud { get; set; }
        public virtual DbSet<tbUsuarios> tbUsuarios { get; set; }
        public virtual DbSet<tbVoluntarios> tbVoluntarios { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "Modern_Spanish_CI_AS");

            modelBuilder.Entity<tbAlbergue>(entity =>
            {
                entity.HasKey(e => e.alberg_Id)
                    .HasName("PK__tbAlberg__86A347561FE11B66");

                entity.Property(e => e.alberg_Correo)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.alberg_InformacionAdicion).HasMaxLength(250);

                entity.Property(e => e.alberg_Mision)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.alberg_Nombre)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.alberg_RTN)
                    .IsRequired()
                    .HasMaxLength(13);

                entity.Property(e => e.alberg_Telefono)
                    .IsRequired()
                    .HasMaxLength(13);

                entity.Property(e => e.alberg_Ubicacion)
                    .IsRequired()
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<tbComponentes>(entity =>
            {
                entity.HasKey(e => e.comp_Id)
                    .HasName("PK__tbCompon__531157F5031AC5BB");

                entity.Property(e => e.comp_Nombre)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<tbDonantes>(entity =>
            {
                entity.HasKey(e => e.don_Id)
                    .HasName("PK__tbDonant__4C4F424BBF95CF9D");

                entity.Property(e => e.don_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.don_Fecha).HasColumnType("date");

                entity.HasOne(d => d.per)
                    .WithMany(p => p.tbDonantes)
                    .HasForeignKey(d => d.per_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull);
            });

            modelBuilder.Entity<tbEmpleados>(entity =>
            {
                entity.HasKey(e => e.emp_Id)
                    .HasName("PK__tbEmplea__12854529E10FA447");
            });

            modelBuilder.Entity<tbEspecies>(entity =>
            {
                entity.HasKey(e => e.espc_Id)
                    .HasName("PK__tbEspeci__CA99E64078505275");

                entity.Property(e => e.espc_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<tbFichaAdopcion>(entity =>
            {
                entity.HasKey(e => e.ficha_Id)
                    .HasName("PK__tbFichaA__4F1E49E665E2245E");

                entity.Property(e => e.ficha_FechaRegistro).HasColumnType("date");

                entity.HasOne(d => d.masc)
                    .WithMany(p => p.tbFichaAdopcion)
                    .HasForeignKey(d => d.masc_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull);

                entity.HasOne(d => d.per)
                    .WithMany(p => p.tbFichaAdopcion)
                    .HasForeignKey(d => d.per_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull);
            });

            modelBuilder.Entity<tbFichaMedica>(entity =>
            {
                entity.HasKey(e => e.medic_Id)
                    .HasName("PK__tbFichaM__ED72D1BDAE67FB49");

                entity.Property(e => e.medic_InformacionAdicional).HasMaxLength(250);

                entity.Property(e => e.medic_Personalidad)
                    .IsRequired()
                    .HasMaxLength(250);

                entity.Property(e => e.medic_SaludCuidado)
                    .IsRequired()
                    .HasMaxLength(250);

                entity.HasOne(d => d.masc)
                    .WithMany(p => p.tbFichaMedica)
                    .HasForeignKey(d => d.masc_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull);
            });

            modelBuilder.Entity<tbMascotas>(entity =>
            {
                entity.HasKey(e => e.masc_Id)
                    .HasName("PK__tbMascot__D4743CE44FDA8938");

                entity.Property(e => e.masc_Color)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.masc_HistorialDescripcion)
                    .IsRequired()
                    .HasMaxLength(500);

                entity.Property(e => e.masc_Nombre)
                    .IsRequired()
                    .HasMaxLength(70);

                entity.Property(e => e.masc_Peso)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.masc_Sexo)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.masc_Talla)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.HasOne(d => d.emp)
                    .WithMany(p => p.tbMascotas)
                    .HasForeignKey(d => d.emp_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull);

                entity.HasOne(d => d.espc)
                    .WithMany(p => p.tbMascotas)
                    .HasForeignKey(d => d.espc_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull);

                entity.HasOne(d => d.proc)
                    .WithMany(p => p.tbMascotas)
                    .HasForeignKey(d => d.proc_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull);

                entity.HasOne(d => d.raza)
                    .WithMany(p => p.tbMascotas)
                    .HasForeignKey(d => d.raza_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull);
            });

            modelBuilder.Entity<tbModuloPantallas>(entity =>
            {
                entity.HasKey(e => e.modpan_Id)
                    .HasName("PK__tbModulo__134F35D70068C801");

                entity.Property(e => e.modpan_Nombre)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.HasOne(d => d.mod)
                    .WithMany(p => p.tbModuloPantallas)
                    .HasForeignKey(d => d.mod_Id);
            });

            modelBuilder.Entity<tbModulos>(entity =>
            {
                entity.HasKey(e => e.mod_Id)
                    .HasName("PK__tbModulo__656687D6E33DBE9D");

                entity.Property(e => e.mod_Nombre)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.HasOne(d => d.comp)
                    .WithMany(p => p.tbModulos)
                    .HasForeignKey(d => d.comp_Id)
                    .HasConstraintName("FK_tbModulos_tbComponente_comp_Id");
            });

            modelBuilder.Entity<tbOcupaciones>(entity =>
            {
                entity.HasKey(e => e.ocup_Id)
                    .HasName("PK__tbOcupac__C0D322BC30738CDB");

                entity.Property(e => e.ocup_Descripcion)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<tbPersonas>(entity =>
            {
                entity.HasKey(e => e.per_Id)
                    .HasName("PK__tbPerson__32A0223FBFFEE279");

                entity.Property(e => e.per_Apellidos)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.per_Correo).HasMaxLength(100);

                entity.Property(e => e.per_Domicilio).HasMaxLength(100);

                entity.Property(e => e.per_FechaNacimiento).HasColumnType("date");

                entity.Property(e => e.per_Identidad)
                    .IsRequired()
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.per_Nombres)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.per_Telefono)
                    .HasMaxLength(8)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<tbProcedencia>(entity =>
            {
                entity.HasKey(e => e.proc_Id)
                    .HasName("PK__tbProced__A2148D7DCB3C98F1");

                entity.Property(e => e.proc_Descripcion)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<tbRazas>(entity =>
            {
                entity.HasKey(e => e.raza_Id)
                    .HasName("PK__tbRazas__D23D30E570728AAD");

                entity.Property(e => e.raza_Descripcion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.HasOne(d => d.espc)
                    .WithMany(p => p.tbRazas)
                    .HasForeignKey(d => d.espc_Id);
            });

            modelBuilder.Entity<tbRolModuloPantallas>(entity =>
            {
                entity.HasKey(e => new { e.modpan_Id, e.rol_Id })
                    .HasName("FK_bRolModuloPantallas_Id");

                entity.HasOne(d => d.modpan)
                    .WithMany(p => p.tbRolModuloPantallas)
                    .HasForeignKey(d => d.modpan_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull);

                entity.HasOne(d => d.rol)
                    .WithMany(p => p.tbRolModuloPantallas)
                    .HasForeignKey(d => d.rol_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull);
            });

            modelBuilder.Entity<tbRoles>(entity =>
            {
                entity.HasKey(e => e.rol_Id)
                    .HasName("PK__tbRoles__CF31E07B396B9604");

                entity.Property(e => e.rol_EsActivo)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.rol_Nombre)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<tbSolicitud>(entity =>
            {
                entity.HasKey(e => e.solic_Id)
                    .HasName("PK__tbSolici__467AF10E22478AE2");

                entity.Property(e => e.solic_Correo)
                    .IsRequired()
                    .HasMaxLength(70);

                entity.Property(e => e.solic_Fecha).HasColumnType("datetime");

                entity.Property(e => e.solic_NombreCompleto)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.HasOne(d => d.masc)
                    .WithMany(p => p.tbSolicitud)
                    .HasForeignKey(d => d.masc_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull);
            });

            modelBuilder.Entity<tbUsuarios>(entity =>
            {
                entity.HasKey(e => e.usu_Id)
                    .HasName("PK__tbUsuari__4305630477DBD7BF");

                entity.Property(e => e.usu_Contraseña)
                    .IsRequired()
                    .HasMaxLength(8000);

                entity.Property(e => e.usu_EsActivo)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.usu_Identidad)
                    .IsRequired()
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.usu_PrimerApellido)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.usu_PrimerNombre)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.usu_SegundoApellido)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.usu_SegundoNombre)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.usu_Telefono)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.HasOne(d => d.rol)
                    .WithMany(p => p.tbUsuarios)
                    .HasForeignKey(d => d.rol_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull);
            });

            modelBuilder.Entity<tbVoluntarios>(entity =>
            {
                entity.HasKey(e => e.volun_Id)
                    .HasName("PK__tbVolunt__315890304D4C8D00");

                entity.Property(e => e.volun_FechaIngreso).HasColumnType("date");

                entity.HasOne(d => d.per)
                    .WithMany(p => p.tbVoluntarios)
                    .HasForeignKey(d => d.per_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}